import { ArrowLeft, Mic, Volume2, MessageCircle, Play, Pause } from 'lucide-react'
import { useState } from 'react'

export default function VoiceAssistantScreen({ onNavigate }) {
  const [isListening, setIsListening] = useState(false)
  const [isPlaying, setIsPlaying] = useState(false)
  const [conversation, setConversation] = useState([])
  const [currentQuestion, setCurrentQuestion] = useState('')

  const farmingKnowledgeBase = {
    "What crop should I grow this season?": {
      farmer: "What crop should I grow this season?",
      farmerHi: "рдЗрд╕ рд╕реАрдЬрди рдореЗрдВ рдХреМрди рд╕реА рдлрд╕рд▓ рдЙрдЧрд╛рдиреА рдЪрд╛рд╣рд┐рдП?",
      assistant: "Based on your black soil and current weather, I recommend Soybean for Kharif season. It's profitable and suitable for your region with good market demand.",
      assistantHi: "рдЖрдкрдХреА рдХрд╛рд▓реА рдорд┐рдЯреНрдЯреА рдФрд░ рдореМрдЬреВрджрд╛ рдореМрд╕рдо рдХреЗ рдЖрдзрд╛рд░ рдкрд░, рдореИрдВ рдЦрд░реАрдл рд╕реАрдЬрди рдХреЗ рд▓рд┐рдП рд╕реЛрдпрд╛рдмреАрди рдХреА рд╕рд┐рдлрд╛рд░рд┐рд╢ рдХрд░рддрд╛ рд╣реВрдВред"
    },
    "When should I apply fertilizer?": {
      farmer: "When should I apply fertilizer?",
      farmerHi: "рдЙрд░реНрд╡рд░рдХ рдХрдм рдбрд╛рд▓рдирд╛ рдЪрд╛рд╣рд┐рдП?",
      assistant: "Apply DAP at sowing time and Urea after 20-25 days when plants are 6 inches tall. For better results, add organic compost.",
      assistantHi: "рдмреБрдЖрдИ рдХреЗ рд╕рдордп рдбреАрдПрдкреА рдФрд░ 20-25 рджрд┐рди рдмрд╛рдж рдЬрдм рдкреМрдзреЗ 6 рдЗрдВрдЪ рдХреЗ рд╣реЛрдВ рддреЛ рдпреВрд░рд┐рдпрд╛ рдбрд╛рд▓реЗрдВред"
    },
    "What's the weather today?": {
      farmer: "What's the weather today?",
      farmerHi: "рдЖрдЬ рдореМрд╕рдо рдХреИрд╕рд╛ рд╣реИ?",
      assistant: "Today's weather is partly cloudy with 28┬░C temperature. Humidity is 65% with light winds. Good conditions for field work.",
      assistantHi: "рдЖрдЬ рдХрд╛ рдореМрд╕рдо рдЖрдВрд╢рд┐рдХ рд░реВрдк рд╕реЗ рдмрд╛рджрд▓ рд╣реИ, рддрд╛рдкрдорд╛рди 28┬░C рд╣реИред рдЖрд░реНрджреНрд░рддрд╛ 65% рд╣реИ рдФрд░ рд╣рд▓реНрдХреА рд╣рд╡рд╛ рд╣реИред"
    },
    "Best market prices?": {
      farmer: "Best market prices?",
      farmerHi: "рд╕рдмрд╕реЗ рдЕрдЪреНрдЫреЗ рдмрд╛рдЬрд╛рд░ рднрд╛рд╡?",
      assistant: "Current best prices: Soybean тВ╣5,400/quintal at Indore, Cotton тВ╣7,100/quintal at Nagpur. Prices are trending upward.",
      assistantHi: "рд╡рд░реНрддрдорд╛рди рд╕рд░реНрд╡реЛрддреНрддрдо рднрд╛рд╡: рдЗрдВрджреМрд░ рдореЗрдВ рд╕реЛрдпрд╛рдмреАрди тВ╣5,400/рдХреНрд╡рд┐рдВрдЯрд▓, рдирд╛рдЧрдкреБрд░ рдореЗрдВ рдХрдкрд╛рд╕ тВ╣7,100/рдХреНрд╡рд┐рдВрдЯрд▓ред"
    },
    "Fertilizer for cotton?": {
      farmer: "Fertilizer for cotton?",
      farmerHi: "рдХрдкрд╛рд╕ рдХреЗ рд▓рд┐рдП рдЙрд░реНрд╡рд░рдХ?",
      assistant: "For cotton: Use 100kg DAP + 50kg Urea per acre at sowing. Apply 50kg Urea at flowering stage. Add potash for better fiber quality.",
      assistantHi: "рдХрдкрд╛рд╕ рдХреЗ рд▓рд┐рдП: рдмреБрдЖрдИ рдХреЗ рд╕рдордп рдкреНрд░рддрд┐ рдПрдХрдбрд╝ 100 рдХрд┐рдЧреНрд░рд╛ рдбреАрдПрдкреА + 50 рдХрд┐рдЧреНрд░рд╛ рдпреВрд░рд┐рдпрд╛ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░реЗрдВред"
    },
    "How to prevent pests?": {
      farmer: "How to prevent pests?",
      farmerHi: "рдХреАрдЯреЛрдВ рд╕реЗ рдХреИрд╕реЗ рдмрдЪреЗрдВ?",
      assistant: "Use neem oil spray weekly, maintain field hygiene, crop rotation, and install pheromone traps. Monitor regularly for early detection.",
      assistantHi: "рд╕рд╛рдкреНрддрд╛рд╣рд┐рдХ рдиреАрдо рддреЗрд▓ рдХрд╛ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХрд░реЗрдВ, рдЦреЗрдд рдХреА рд╕реНрд╡рдЪреНрдЫрддрд╛ рдмрдирд╛рдП рд░рдЦреЗрдВ, рдлрд╕рд▓ рдЪрдХреНрд░ рдЕрдкрдирд╛рдПрдВред"
    },
    "рдореЗрд░реА рдлрд╕рд▓ рдореЗрдВ рдкреАрд▓реЗ рдкрддреНрддреЗ рдХреНрдпреЛрдВ рд╣реИрдВ?": {
      farmer: "Why are my crop leaves turning yellow?",
      farmerHi: "рдореЗрд░реА рдлрд╕рд▓ рдореЗрдВ рдкреАрд▓реЗ рдкрддреНрддреЗ рдХреНрдпреЛрдВ рд╣реИрдВ?",
      assistant: "Yellow leaves indicate nitrogen deficiency or overwatering. Check soil drainage and apply urea fertilizer. Also check for pest damage.",
      assistantHi: "рдкреАрд▓реЗ рдкрддреНрддреЗ рдирд╛рдЗрдЯреНрд░реЛрдЬрди рдХреА рдХрдореА рдпрд╛ рдЕрдзрд┐рдХ рдкрд╛рдиреА рдХрд╛ рд╕рдВрдХреЗрдд рд╣реИрдВред рдорд┐рдЯреНрдЯреА рдХреА рдЬрд▓ рдирд┐рдХрд╛рд╕реА рдЬрд╛рдВрдЪреЗрдВ рдФрд░ рдпреВрд░рд┐рдпрд╛ рдбрд╛рд▓реЗрдВред"
    },
    "рдХрд▓ рдмрд╛рд░рд┐рд╢ рд╣реЛрдЧреА рдХреНрдпрд╛?": {
      farmer: "Will it rain tomorrow?",
      farmerHi: "рдХрд▓ рдмрд╛рд░рд┐рд╢ рд╣реЛрдЧреА рдХреНрдпрд╛?",
      assistant: "Tomorrow shows 40% chance of light rain in the evening. Cloud cover increasing. Good time to prepare fields for irrigation.",
      assistantHi: "рдХрд▓ рд╢рд╛рдо рдХреЛ рд╣рд▓реНрдХреА рдмрд╛рд░рд┐рд╢ рдХреА 40% рд╕рдВрднрд╛рд╡рдирд╛ рд╣реИред рдмрд╛рджрд▓ рдмрдврд╝ рд░рд╣реЗ рд╣реИрдВред рд╕рд┐рдВрдЪрд╛рдИ рдХреЗ рд▓рд┐рдП рдЦреЗрдд рддреИрдпрд╛рд░ рдХрд░рдиреЗ рдХрд╛ рдЕрдЪреНрдЫрд╛ рд╕рдордп рд╣реИред"
    },
    "рд╕реЛрдпрд╛рдмреАрди рдХрд╛ рднрд╛рд╡ рдХреНрдпрд╛ рд╣реИ?": {
      farmer: "What is the soybean price?",
      farmerHi: "рд╕реЛрдпрд╛рдмреАрди рдХрд╛ рднрд╛рд╡ рдХреНрдпрд╛ рд╣реИ?",
      assistant: "Current soybean price is тВ╣5,400 per quintal in Indore market, тВ╣5,200 in local mandis. Prices are stable with slight upward trend.",
      assistantHi: "рд╡рд░реНрддрдорд╛рди рд╕реЛрдпрд╛рдмреАрди рдХрд╛ рднрд╛рд╡ рдЗрдВрджреМрд░ рдордВрдбреА рдореЗрдВ тВ╣5,400 рдкреНрд░рддрд┐ рдХреНрд╡рд┐рдВрдЯрд▓ рд╣реИ, рд╕реНрдерд╛рдиреАрдп рдордВрдбрд┐рдпреЛрдВ рдореЗрдВ тВ╣5,200ред"
    },
    "рдХреМрди рд╕рд╛ рдмреАрдЬ рдмреЗрд╣рддрд░ рд╣реИ?": {
      farmer: "Which seed is better?",
      farmerHi: "рдХреМрди рд╕рд╛ рдмреАрдЬ рдмреЗрд╣рддрд░ рд╣реИ?",
      assistant: "For soybean, JS-335 variety is excellent for black soil. For cotton, Bt cotton varieties like RCH-659 give good yield and pest resistance.",
      assistantHi: "рд╕реЛрдпрд╛рдмреАрди рдХреЗ рд▓рд┐рдП, JS-335 рдХрд┐рд╕реНрдо рдХрд╛рд▓реА рдорд┐рдЯреНрдЯреА рдХреЗ рд▓рд┐рдП рдЙрддреНрдХреГрд╖реНрдЯ рд╣реИред рдХрдкрд╛рд╕ рдХреЗ рд▓рд┐рдП, RCH-659 рдЬреИрд╕реА Bt рдХрд┐рд╕реНрдореЗрдВ рдЕрдЪреНрдЫреА рд╣реИрдВред"
    }
  }

  const getRandomQuestion = () => {
    const questions = Object.keys(farmingKnowledgeBase)
    return questions[Math.floor(Math.random() * questions.length)]
  }

  const findBestMatch = (userInput) => {
    const input = userInput.toLowerCase()
    
    // Direct match
    if (farmingKnowledgeBase[userInput]) {
      return farmingKnowledgeBase[userInput]
    }
    
    // Keyword matching
    for (const [question, response] of Object.entries(farmingKnowledgeBase)) {
      const questionWords = question.toLowerCase().split(' ')
      const inputWords = input.split(' ')
      
      const matchCount = inputWords.filter(word => 
        questionWords.some(qWord => qWord.includes(word) || word.includes(qWord))
      ).length
      
      if (matchCount >= 2) {
        return response
      }
    }
    
    // Hindi keyword matching
    const hindiKeywords = {
      'рдлрд╕рд▓': 'What crop should I grow this season?',
      'рдЙрд░реНрд╡рд░рдХ': 'When should I apply fertilizer?',
      'рдореМрд╕рдо': "What's the weather today?",
      'рднрд╛рд╡': 'Best market prices?',
      'рдХрдкрд╛рд╕': 'Fertilizer for cotton?',
      'рдХреАрдЯ': 'How to prevent pests?',
      'рдкреАрд▓реЗ': 'рдореЗрд░реА рдлрд╕рд▓ рдореЗрдВ рдкреАрд▓реЗ рдкрддреНрддреЗ рдХреНрдпреЛрдВ рд╣реИрдВ?',
      'рдмрд╛рд░рд┐рд╢': 'рдХрд▓ рдмрд╛рд░рд┐рд╢ рд╣реЛрдЧреА рдХреНрдпрд╛?',
      'рд╕реЛрдпрд╛рдмреАрди': 'рд╕реЛрдпрд╛рдмреАрди рдХрд╛ рднрд╛рд╡ рдХреНрдпрд╛ рд╣реИ?',
      'рдмреАрдЬ': 'рдХреМрди рд╕рд╛ рдмреАрдЬ рдмреЗрд╣рддрд░ рд╣реИ?'
    }
    
    for (const [keyword, question] of Object.entries(hindiKeywords)) {
      if (input.includes(keyword)) {
        return farmingKnowledgeBase[question]
      }
    }
    
    // Default response for unmatched questions
    return {
      farmer: userInput,
      farmerHi: userInput,
      assistant: "I understand your question about farming. Let me connect you with our agricultural experts for detailed guidance on this topic.",
      assistantHi: "рдореИрдВ рдХреГрд╖рд┐ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЖрдкрдХрд╛ рдкреНрд░рд╢реНрди рд╕рдордЭрддрд╛ рд╣реВрдВред рдЗрд╕ рд╡рд┐рд╖рдп рдкрд░ рд╡рд┐рд╕реНрддреГрдд рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдХреЗ рд▓рд┐рдП рдореИрдВ рдЖрдкрдХреЛ рд╣рдорд╛рд░реЗ рдХреГрд╖рд┐ рд╡рд┐рд╢реЗрд╖рдЬреНрдЮреЛрдВ рд╕реЗ рдЬреЛрдбрд╝рддрд╛ рд╣реВрдВред"
    }
  }

  const handleMicClick = () => {
    if (!isListening) {
      setIsListening(true)
      const randomQuestion = getRandomQuestion()
      setCurrentQuestion(randomQuestion)
      
      // Simulate voice recognition
      setTimeout(() => {
        setIsListening(false)
        const response = farmingKnowledgeBase[randomQuestion]
        addToConversation(response)
      }, 3000)
    } else {
      setIsListening(false)
    }
  }

  const addToConversation = (conv) => {
    setConversation(prev => [...prev, conv])
    setCurrentQuestion('')
  }

  const handlePlayAudio = (index) => {
    setIsPlaying(index)
    setTimeout(() => setIsPlaying(false), 2000)
  }

  const quickQuestions = [
    { 
      question: "What's the weather today?", 
      questionHi: "рдЖрдЬ рдореМрд╕рдо рдХреИрд╕рд╛ рд╣реИ?",
      icon: "ЁЯМдя╕П"
    },
    { 
      question: "Best market prices?", 
      questionHi: "рд╕рдмрд╕реЗ рдЕрдЪреНрдЫреЗ рдмрд╛рдЬрд╛рд░ рднрд╛рд╡?",
      icon: "ЁЯТ░"
    },
    { 
      question: "Fertilizer for cotton?", 
      questionHi: "рдХрдкрд╛рд╕ рдХреЗ рд▓рд┐рдП рдЙрд░реНрд╡рд░рдХ?",
      icon: "ЁЯМ╛"
    },
    { 
      question: "How to prevent pests?", 
      questionHi: "рдХреАрдЯреЛрдВ рд╕реЗ рдХреИрд╕реЗ рдмрдЪреЗрдВ?",
      icon: "ЁЯЫбя╕П"
    }
  ]

  return (
    <div className="min-h-screen p-6">
      {/* Header */}
      <header className="flex items-center mb-6 animate-fadeInUp">
        <button 
          onClick={() => onNavigate('home')}
          className="mr-4 p-2 rounded-full hover:bg-gray-100 transition-colors"
        >
          <ArrowLeft className="w-6 h-6 text-gray-600" />
        </button>
        <div>
          <h1 className="text-2xl font-bold text-green-800">Voice Assistant</h1>
          <p className="text-green-600 font-medium">рдЖрд╡рд╛рдЬрд╝ рд╕рд╣рд╛рдпрдХ</p>
        </div>
      </header>

      {/* Voice Interface */}
      <div className="card text-center mb-6 bg-gradient-to-br from-green-50 to-emerald-50 border-green-200 animate-fadeInUp" style={{ animationDelay: '0.1s' }}>
        <div className="mb-6">
          <h3 className="text-lg font-bold text-green-800 mb-2">Ask by Voice</h3>
          <p className="text-green-600 text-sm">рдЖрд╡рд╛рдЬрд╝ рд╕реЗ рдкреВрдЫреЗрдВ</p>
        </div>

        {/* Microphone Button */}
        <div className="relative mb-6">
          <button
            onClick={handleMicClick}
            className={`w-24 h-24 rounded-full mx-auto flex items-center justify-center transition-all duration-300 shadow-lg ${
              isListening 
                ? 'bg-gradient-to-r from-red-500 to-orange-500 animate-pulse scale-110' 
                : 'bg-gradient-to-r from-green-500 to-emerald-500 hover:scale-105'
            }`}
          >
            <Mic className="w-10 h-10 text-white" />
          </button>
          
          {isListening && (
            <div className="absolute -inset-4 border-4 border-green-300 rounded-full animate-ping"></div>
          )}
        </div>

        {/* Status */}
        <div className="mb-4">
          {isListening ? (
            <div>
              <p className="text-green-800 font-semibold">Listening...</p>
              <p className="text-sm text-green-600">рд╕реБрди рд░рд╣реЗ рд╣реИрдВ...</p>
              {currentQuestion && (
                <p className="text-sm text-gray-600 mt-2 italic">"{currentQuestion}"</p>
              )}
            </div>
          ) : (
            <div>
              <p className="text-gray-700">Tap to ask a question</p>
              <p className="text-sm text-gray-600">рд╕рд╡рд╛рд▓ рдкреВрдЫрдиреЗ рдХреЗ рд▓рд┐рдП рджрдмрд╛рдПрдВ</p>
            </div>
          )}
        </div>

        {/* Language Support */}
        <div className="flex items-center justify-center space-x-4 text-sm">
          <div className="flex items-center">
            <span className="w-3 h-3 bg-green-500 rounded-full mr-2"></span>
            <span className="text-gray-600">English</span>
          </div>
          <div className="flex items-center">
            <span className="w-3 h-3 bg-orange-500 rounded-full mr-2"></span>
            <span className="text-gray-600">рд╣рд┐рдВрджреА</span>
          </div>
          <div className="flex items-center">
            <span className="w-3 h-3 bg-blue-500 rounded-full mr-2"></span>
            <span className="text-gray-600">рдорд░рд╛рдареА</span>
          </div>
        </div>
      </div>

      {/* Quick Questions */}
      <div className="mb-6 animate-fadeInUp" style={{ animationDelay: '0.2s' }}>
        <h3 className="text-lg font-bold text-gray-800 mb-4">Quick Questions</h3>
        <div className="grid grid-cols-2 gap-3">
          {quickQuestions.map((q, index) => (
            <button
              key={index}
              onClick={() => {
                setCurrentQuestion(q.question)
                const response = findBestMatch(q.question)
                addToConversation(response)
              }}
              className="p-4 bg-white rounded-xl border border-gray-200 hover:border-green-300 hover:bg-green-50 transition-all duration-200 text-left"
            >
              <div className="flex items-center mb-2">
                <span className="text-xl mr-2">{q.icon}</span>
                <span className="text-sm font-semibold text-gray-800">{q.question}</span>
              </div>
              <p className="text-xs text-gray-600">{q.questionHi}</p>
            </button>
          ))}
        </div>
      </div>

      {/* Conversation History */}
      {conversation.length > 0 && (
        <div className="space-y-4 animate-fadeInUp" style={{ animationDelay: '0.3s' }}>
          <h3 className="text-lg font-bold text-gray-800">Conversation</h3>
          {conversation.map((conv, index) => (
            <div key={index} className="space-y-3">
              {/* Farmer Question */}
              <div className="flex justify-end">
                <div className="max-w-xs bg-green-500 text-white p-4 rounded-2xl rounded-tr-sm">
                  <div className="flex items-center mb-2">
                    <Mic className="w-4 h-4 mr-2" />
                    <span className="text-xs opacity-90">You asked:</span>
                  </div>
                  <p className="mb-1">{conv.farmer}</p>
                  <p className="text-xs opacity-90">{conv.farmerHi}</p>
                </div>
              </div>

              {/* Assistant Response */}
              <div className="flex justify-start">
                <div className="max-w-xs bg-white border border-gray-200 p-4 rounded-2xl rounded-tl-sm shadow-sm">
                  <div className="flex items-center justify-between mb-2">
                    <div className="flex items-center">
                      <MessageCircle className="w-4 h-4 text-green-600 mr-2" />
                      <span className="text-xs text-green-600">Assistant:</span>
                    </div>
                    <button
                      onClick={() => handlePlayAudio(index)}
                      className="p-1 rounded-full hover:bg-gray-100 transition-colors"
                    >
                      {isPlaying === index ? (
                        <Pause className="w-4 h-4 text-gray-600" />
                      ) : (
                        <Volume2 className="w-4 h-4 text-gray-600" />
                      )}
                    </button>
                  </div>
                  <p className="text-gray-800 mb-1">{conv.assistant}</p>
                  <p className="text-xs text-gray-600">{conv.assistantHi}</p>
                  
                  {isPlaying === index && (
                    <div className="mt-2 flex items-center">
                      <div className="flex space-x-1">
                        <div className="w-1 h-3 bg-green-500 rounded animate-pulse"></div>
                        <div className="w-1 h-4 bg-green-500 rounded animate-pulse" style={{ animationDelay: '0.1s' }}></div>
                        <div className="w-1 h-2 bg-green-500 rounded animate-pulse" style={{ animationDelay: '0.2s' }}></div>
                        <div className="w-1 h-4 bg-green-500 rounded animate-pulse" style={{ animationDelay: '0.3s' }}></div>
                      </div>
                      <span className="text-xs text-green-600 ml-2">Playing audio...</span>
                    </div>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      )}

      {/* Help Section */}
      <div className="card mt-6 bg-gradient-to-br from-blue-50 to-indigo-50 border-blue-200 animate-fadeInUp" style={{ animationDelay: '0.4s' }}>
        <div className="flex items-center mb-3">
          <span className="text-2xl mr-3">ЁЯТб</span>
          <div>
            <h3 className="font-bold text-blue-800">How to Use</h3>
            <p className="text-sm text-blue-600">рдЙрдкрдпреЛрдЧ рдХреИрд╕реЗ рдХрд░реЗрдВ</p>
          </div>
        </div>
        <ul className="space-y-2 text-sm">
          <li className="flex items-start">
            <span className="mr-2">ЁЯОд</span>
            <div>
              <p className="text-gray-700">Press and hold the microphone to ask questions</p>
              <p className="text-xs text-gray-600">рд╕рд╡рд╛рд▓ рдкреВрдЫрдиреЗ рдХреЗ рд▓рд┐рдП рдорд╛рдЗрдХреНрд░реЛрдлреЛрди рджрдмрд╛рдПрдВ рдФрд░ рдкрдХрдбрд╝реЗрдВ</p>
            </div>
          </li>
          <li className="flex items-start">
            <span className="mr-2">ЁЯФК</span>
            <div>
              <p className="text-gray-700">Tap the speaker icon to hear responses</p>
              <p className="text-xs text-gray-600">рдЬрд╡рд╛рдм рд╕реБрдирдиреЗ рдХреЗ рд▓рд┐рдП рд╕реНрдкреАрдХрд░ рдЖрдЗрдХрди рджрдмрд╛рдПрдВ</p>
            </div>
          </li>
          <li className="flex items-start">
            <span className="mr-2">ЁЯМР</span>
            <div>
              <p className="text-gray-700">Ask in Hindi, Marathi, or English</p>
              <p className="text-xs text-gray-600">рд╣рд┐рдВрджреА, рдорд░рд╛рдареА рдпрд╛ рдЕрдВрдЧреНрд░реЗрдЬреА рдореЗрдВ рдкреВрдЫреЗрдВ</p>
            </div>
          </li>
        </ul>
      </div>

      {/* Sample Questions */}
      <div className="card mt-4 bg-gradient-to-br from-green-50 to-emerald-100 border-green-200 animate-fadeInUp" style={{ animationDelay: '0.5s' }}>
        <div className="flex items-center mb-3">
          <span className="text-2xl mr-3">тЭУ</span>
          <div>
            <h3 className="font-bold text-green-800">Sample Questions</h3>
            <p className="text-sm text-green-600">рдирдореВрдирд╛ рдкреНрд░рд╢реНрди</p>
          </div>
        </div>
        <div className="space-y-2 text-sm">
          <p className="text-gray-700 italic">"рдореЗрд░реА рдлрд╕рд▓ рдореЗрдВ рдкреАрд▓реЗ рдкрддреНрддреЗ рдХреНрдпреЛрдВ рд╣реИрдВ?"</p>
          <p className="text-gray-700 italic">"рдХрд▓ рдмрд╛рд░рд┐рд╢ рд╣реЛрдЧреА рдХреНрдпрд╛?"</p>
          <p className="text-gray-700 italic">"рд╕реЛрдпрд╛рдмреАрди рдХрд╛ рднрд╛рд╡ рдХреНрдпрд╛ рд╣реИ?"</p>
          <p className="text-gray-700 italic">"рдХреМрди рд╕рд╛ рдмреАрдЬ рдмреЗрд╣рддрд░ рд╣реИ?"</p>
        </div>
      </div>
    </div>
  )
}
